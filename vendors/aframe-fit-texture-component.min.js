!function(t){function e(n){if(i[n])return i[n].exports;var r=i[n]={exports:{},id:n,loaded:!1};return t[n].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var i={};return e.m=t,e.c=i,e.p="",e(0)}([function(t,e){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("fit-texture",{dependencies:["geometry","material"],schema:{type:"boolean","default":!0},init:function(){},update:function(){if(this.data!==!1){var t=this.el,e=this;e.texture?e.applyTransformation():t.addEventListener("material-texture-loaded",function(t){e.texture=t.detail.texture,e.applyTransformation()})}},applyTransformation:function(){var t=this.el,e=t.getAttribute("geometry"),i=this.texture.image.height/this.texture.image.width;if(e.width&&e.height&&console.warn('Using `fit-texture` component on an element with both width and height. Therefore keeping width and changing height to fit the texture. If you want to manually set both width and height, set `fit-texture="false"`. '),e.width)t.setAttribute("height",e.width*i);else if(e.height)t.setAttribute("width",e.height/i);else{var n=2;t.setAttribute("width",""+n),t.setAttribute("height",n*i)}},remove:function(){},pause:function(){},play:function(){}})}]);
